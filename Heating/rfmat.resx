<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>